version: '3'
services:
  # the node you will access to access the application
  ingress:
    image: maayanlab/proxy:latest
    environment:
      - nginx_proxy_00="/example/? http://appyter-example:5000$$1"
      # TODO write static/profile files to s3?
      - nginx_proxy_01="(/example/static/.*) http://appyter-example:5000$$1"
      - nginx_proxy_02="(/example/profile/.*) http://appyter-example:5000$$1"
      - nginx_proxy_03="(/example/socket.io/.*) http://appyter-example:5000$$1"
      - nginx_proxy_99="(.*) http://s3:9000/storage$$1"
      - SERVER_NAME=${SERVER_NAME}
      - BACKEND=http://appyter-example:5000
    ports:
      - 8080:80
  # the backend(s) of the application
  #  can be extended for more backends or more replicas for each backend,
  #  see appyter-catalog for a more complete example of running many
  #  appyters in production
  appyter-example:
    build:
      context: ../
      args:
        appyter_version: git+git://github.com/Maayanlab/appyter.git@svelte-orchestration
    image: maayanlab/appyter-example:latest
    environment:
      - PREFIX=/example
      - HOST=${SERVER_NAME}
      - DATA_DIR=s3://${MINIO_ACCESS_KEY}:${MINIO_SECRET_KEY}@s3:9000/storage/example/
      - DISPATCHER=http://appyter-orchestrator:5000
  # the parallel execution orchestrator
  appyter-orchestrator:
    build:
      context: ./appyter
      args:
        appyter_version: git+git://github.com/Maayanlab/appyter.git@svelte-orchestration
    image: maayanlab/appyter:latest
    environment:
      - HOST=appyter-orchestrator
      - JOBS=${JOBS}
      - dispatch=native
    command:
      - appyter
      - orchestration
      - dispatcher
  # the s3 data storage
  s3:
    image: minio/minio
    entrypoint:
      - /bin/sh
    command:
      - -c
      - >
        mkdir -p /data/storage;
        minio server /data;
        exit 0
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
