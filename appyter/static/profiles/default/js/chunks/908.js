"use strict";(self.webpackChunkappyter_js=self.webpackChunkappyter_js||[]).push([[908],{6908:(r,e,t)=>{t.r(e),t.d(e,{default:()=>i});var n=t(7418);function o(r){let e,t,o=r[0].toString()+"";return{c(){e=(0,n.ND4)("div"),t=(0,n.Qq7)(o),(0,n.CFu)(e,"class","alert alert-danger")},m(r,o){(0,n.Yry)(r,e,o),(0,n.BCw)(e,t)},p(r,[e]){1&e&&o!==(o=r[0].toString()+"")&&(0,n.iQh)(t,o)},i:n.lQ1,o:n.lQ1,d(r){r&&(0,n.YoD)(e)}}}function s(r,e,t){let{error:n="An unknown error occurred"}=e;return r.$$set=r=>{"error"in r&&t(0,n=r.error)},[n]}t(5866);class c extends n.r7T{constructor(r){super(),(0,n.TsN)(this,r,s,o,n.jXN,{error:0})}}const a=c;async function i(r){new MutationObserver(e=>{e.forEach(e=>{e.addedNodes.forEach(e=>{e.classList&&e.classList.contains("svelte")&&l(r,e)})})}).observe(document,{subtree:!0,childList:!0}),document.querySelectorAll(".svelte").forEach(e=>l(r,e))}function l(r,e){e.childNodes.forEach(t=>{"SCRIPT"!==t.nodeName||"application/json"!==t.getAttribute("type")||async function(r,e,t){const{js_url:n,...o}=JSON.parse(t.textContent),{default:s}=await function(r,e){return Array.isArray(e)?new Promise((t,n)=>r.require(e,(...r)=>t(r),n)):new Promise((t,n)=>r.require([e],t,n))}(r,n),c=[...e.children];new s({target:e,props:o});for(const r of c)r.remove()}(r,e,t).catch(r=>{console.error(r),new a({target:e,props:{error:r.toString()}})}).finally(()=>{e.classList.remove("loading")})})}}}]);