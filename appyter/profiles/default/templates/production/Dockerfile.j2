FROM ubuntu

ENV DEBIAN_FRONTEND "noninteractive"
ENV TZ "America/New_York"

RUN set -x \
  && echo "Preparing system..." \
  && apt-get -y update \
  && apt-get -y install \
    curl \
    fuse \
    git \
    nginx \
    python3-dev \
    python3-pip \
    rclone \
  && curl https://get.docker.com | sh \
  && rm -rf /var/lib/apt/lists/* \
  && pip3 install --no-cache-dir --upgrade pip \
  && chmod og+rwx -R /var/lib/nginx /var/log/nginx

RUN set -x \
  && echo "Preparing user..." \
  && useradd -ms /bin/bash -d /app app \
  && groupadd fuse \
  && adduser app fuse \
  && chown -R app:app /app \
  && chmod og+rwx -R /var/lib/nginx /var/log/nginx

RUN set -x \
  && echo "Installing jupyter kernel..." \
  && pip3 install --no-cache-dir ipykernel \
  && python3 -m ipykernel install

{%- if _os.path.isfile(_os.path.join(_config.CWD, 'deps.txt')) %}

ADD deps.txt /app/deps.txt
RUN set -x \
  && echo "Installing system dependencies from deps.txt..." \
  && apt-get -y update \
  && apt-get -y install $(grep -v '^#' /app/deps.txt) \
  && rm -rf /var/lib/apt/lists/* \
  && rm /app/deps.txt

{%- endif %}

{%- if _os.path.isdir(_os.path.join(_config.CWD, 'deps')) %}

ADD deps/ /app/deps/
RUN set -x \
  && echo "Installing .dep files from deps/*..." \
  && dpkg -i /app/deps/*.deb || true \
  && apt-get -y update \
  && apt-get -y install -f \
  && rm -rf /var/lib/apt/lists/* \
  && rm -r /app/deps/

{%- endif %}

{%- if _os.path.isfile(_os.path.join(_config.CWD, 'setup.R')) %}

ADD setup.R /app/setup.R
RUN set -x \
  && echo "Installing R..." \
  && apt-get -y update \
  && apt-get -y install r-base \
  && rm -rf /var/lib/apt/lists/* \
  && echo "Setting up R with setup.R..." \
  && R -e "source('/app/setup.R')" \
  && rm /app/setup.R

{%- endif %}

{%- if _os.path.isfile(_os.path.join(_config.CWD, 'requirements.txt')) %}

ADD requirements.txt /app/requirements.txt
RUN set -x \
  && echo "Installing python dependencies from requirements.txt..." \
  && pip3 install --no-cache-dir -r /app/requirements.txt \
  && rm /app/requirements.txt

{%- endif %}

ARG appyter_version=appyter[production]@git+https://github.com/Maayanlab/appyter.git
RUN set -x \
  && echo "Installing appyter..." \
  && pip3 install --no-cache-dir ${appyter_version}

USER app
WORKDIR /app
EXPOSE 5000
VOLUME /app/data

ENV PATH "/app:$PATH"
ENV PYTHONPATH "/app:$PYTHONPATH"
ENV IPYNB "{{ _config.IPYNB }}"

COPY --chown=app:app . /app

CMD [ "appyter" ]
